{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveAxisDirection = exports.getDifference = exports.getDirectionValue = exports.getDirectionKey = void 0;\n\nvar _types = require(\"../types\");\n\nvar getDirectionKey = function getDirectionKey() {\n  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var key = Object.keys(object).toString();\n\n  switch (key) {\n    case _types.TraceDirectionKey.POSITIVE:\n      return _types.TraceDirectionKey.POSITIVE;\n\n    case _types.TraceDirectionKey.NEGATIVE:\n      return _types.TraceDirectionKey.NEGATIVE;\n\n    default:\n      return _types.TraceDirectionKey.NONE;\n  }\n};\n\nexports.getDirectionKey = getDirectionKey;\n\nvar getDirectionValue = function getDirectionValue() {\n  var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return values[values.length - 1] || 0;\n};\n\nexports.getDirectionValue = getDirectionValue;\n\nvar getDifference = function getDifference() {\n  var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return Math.abs(x - y);\n};\n\nexports.getDifference = getDifference;\n\nvar resolveAxisDirection = function resolveAxisDirection(axis, key) {\n  var negative = _types.Direction.LEFT;\n  var positive = _types.Direction.RIGHT;\n  var direction = _types.Direction.NONE;\n\n  if (axis === _types.Axis.Y) {\n    negative = _types.Direction.BOTTOM;\n    positive = _types.Direction.TOP;\n  }\n\n  if (key === _types.TraceDirectionKey.NEGATIVE) {\n    direction = negative;\n  }\n\n  if (key === _types.TraceDirectionKey.POSITIVE) {\n    direction = positive;\n  }\n\n  return direction;\n};\n\nexports.resolveAxisDirection = resolveAxisDirection;","map":null,"metadata":{},"sourceType":"script"}